{"version":3,"sources":["assets/fonts/Roboto/Roboto-Black.ttf","assets/fonts/Roboto/Roboto-BlackItalic.ttf","assets/fonts/Roboto/Roboto-Bold.ttf","assets/fonts/Roboto/Roboto-BoldItalic.ttf","assets/fonts/Roboto/Roboto-Italic.ttf","assets/fonts/Roboto/Roboto-Light.ttf","assets/fonts/Roboto/Roboto-LightItalic.ttf","assets/fonts/Roboto/Roboto-Medium.ttf","assets/fonts/Roboto/Roboto-MediumItalic.ttf","assets/fonts/Roboto/Roboto-Regular.ttf","assets/fonts/Roboto/Roboto-Thin.ttf","assets/fonts/Roboto/Roboto-ThinItalic.ttf","GlobalStyles.ts","assets/img/GrtbVv47Y4c.jpeg","assets/img/japan.jpg","themes/index.ts","themes/light.ts","ui/Loader.tsx","ui/Button.tsx","pages/Home/Home.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","RobotoRegularTTF","RobotoBoldItalicTTF","RobotoItalicTTF","RobotoBoldTTF","RobotoBlackTTF","RobotoThinTTF","RobotoThinItalicTTF","RobotoMediumTTF","RobotoMediumItalicTTF","RobotoLightItalicTTF","RobotoLightTTF","RobotoBlackItalicTTF","defaultTheme","name","colors","color0","color1","color2","color3","color4","color5","color6","color7","color8","color9","color10","color11","color12","color13","color14","typography","title1","subhead1","subhead2","StyledSpinner","styled","div","color","Loader","className","Root","button","theme","variant","disabled","css","$loading","$disabled","Button","label","type","loading","props","_loading","Link","Text","main","japanPic","View","Avatar","img","Home","src","avatarPic","onClick","window","open","Router","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9424bf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Black.2a428584.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-BlackItalic.77e50ab1.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Bold.75371f53.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-BoldItalic.60c1f67b.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Italic.beb7fe13.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Light.8be2d148.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-LightItalic.43cbee78.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Medium.7429a63c.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-MediumItalic.56a82359.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Thin.1711b41f.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-ThinItalic.026cbce1.ttf\";","import { createGlobalStyle } from 'styled-components';\n\nimport {\n  RobotoBlackItalicTTF,\n  RobotoBlackTTF,\n  RobotoBoldItalicTTF,\n  RobotoBoldTTF,\n  RobotoItalicTTF,\n  RobotoLightItalicTTF,\n  RobotoLightTTF,\n  RobotoMediumItalicTTF,\n  RobotoMediumTTF,\n  RobotoRegularTTF,\n  RobotoThinItalicTTF,\n  RobotoThinTTF,\n} from './assets/fonts/Roboto';\n\nconst GlobalStyles = createGlobalStyle`\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoRegularTTF}) format('truetype');\n  font-weight: normal;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoBoldItalicTTF}) format('truetype');\n  font-weight: bold;\n  font-style: italic;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoItalicTTF}) format('truetype');\n  font-weight: normal;\n  font-style: italic;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoBoldTTF}) format('truetype');\n  font-weight: bold;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoBlackTTF}) format('truetype');\n  font-weight: 900;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoThinTTF}) format('truetype');\n  font-weight: 100;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoThinItalicTTF}) format('truetype');\n  font-weight: 100;\n  font-style: italic;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoMediumTTF}) format('truetype');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoMediumItalicTTF}) format('truetype');\n  font-weight: 500;\n  font-style: italic;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoLightItalicTTF}) format('truetype');\n  font-weight: 300;\n  font-style: italic;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoLightTTF}) format('truetype');\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url(${RobotoBlackItalicTTF}) format('truetype');\n  font-weight: 900;\n  font-style: italic;\n  font-display: swap;\n}\n`;\n\nexport default GlobalStyles;\n","export default __webpack_public_path__ + \"static/media/GrtbVv47Y4c.b2fa937c.jpeg\";","export default __webpack_public_path__ + \"static/media/japan.72f04963.jpg\";","import { lightTheme } from './light';\n\nconst defaultTheme = { ...lightTheme, name: 'default' };\n\nexport { lightTheme } from './light';\n\nexport default defaultTheme;\n\nexport type ThemeType = typeof defaultTheme;\n","export const lightTheme = {\n  name: 'light',\n  colors: {\n    color0: '#000000',\n    color1: '#FFFFFF',\n    color2: '#444444',\n    color3: '#C0C0C0',\n    color4: '#E2E2EA',\n    color5: '#F4F6F8',\n    color6: '#222c46',\n    color7: '#31CACA',\n    color8: '#FFC542',\n    color9: '#FF974A',\n    color10: '#3DD598',\n    color11: '#0062FF',\n    color12: '#F33535',\n    color13: '#061B3C',\n    color14: '#F3F5FC',\n  },\n  typography: {\n    title1: `\n      font-family: Roboto, sans-serif;\n      font-weight: 700;\n      font-size: 48px;\n      line-height: 60px;\n    `,\n    subhead1: `\n      font-family: Roboto, sans-serif;\n      font-weight: 500;\n      font-size: 15px;\n      line-height: 18px;\n    `,\n    subhead2: `\n      font-family: Roboto, sans-serif;\n      font-weight: 300;\n      font-style: normal;\n      font-size: 15px;\n      line-height: 18px;\n    `,\n  },\n};\n","import styled from 'styled-components';\n\nconst Loader: React.FC<LoaderProps> = ({ color = '#ffffff' }) => {\n  return (\n    <StyledSpinner color={color}>\n      <div className=\"loader\"></div>\n    </StyledSpinner>\n  );\n};\n\nexport interface LoaderProps {\n  color?: string;\n}\n\nconst StyledSpinner = styled.div<LoaderProps>`\n  .loader,\n  .loader:after {\n    border-radius: 50%;\n    width: 16px;\n    height: 16px;\n  }\n  .loader {\n    margin: 0 auto;\n    font-size: 1px;\n    position: relative;\n    text-indent: -9999em;\n    border-top: ${({ color }) => `2px solid ${color};`};\n    border-right: ${({ color }) => `2px solid ${color};`};\n    border-bottom: ${({ color }) => `2px solid ${color};`};\n    border-left: 2px solid rgba(255, 255, 255, 0.2);\n    transform: translateZ(0);\n    animation: load8 1.1s infinite linear;\n  }\n  @-webkit-keyframes load8 {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load8 {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Loader;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport defaultTheme from '../themes';\nimport Loader from './Loader';\n\nconst Button: React.FC<ButtonProps> = ({ label, type = 'button', disabled = false, loading = false, ...props }) => {\n  let _loading = loading;\n\n  if (disabled) {\n    _loading = false;\n  }\n\n  return (\n    <Root disabled={disabled || loading} $disabled={disabled} $loading={_loading} type={type} {...props}>\n      {_loading ? (\n        <Loader color={props.variant === 'primary' ? defaultTheme.colors.color1 : defaultTheme.colors.color2} />\n      ) : (\n        label\n      )}\n    </Root>\n  );\n};\n\nexport interface ButtonProps {\n  variant: ButtonVariant;\n  label: string;\n  type?: ButtonType;\n  disabled?: boolean;\n  loading?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onClick: (...args: any[]) => any;\n}\n\nexport type ButtonVariant = 'primary' | 'secondary';\n\nexport type ButtonType = 'button' | 'reset' | 'submit';\n\ninterface RootProps extends Omit<ButtonProps, 'disabled' | 'loading' | 'label' | 'onClick'> {\n  $loading: boolean;\n  $disabled: boolean;\n}\n\nconst Root = styled.button<RootProps>`\n  min-height: 54px;\n  border: 0;\n\n  padding: 17px;\n  min-width: 100px;\n  transition: 0.3s;\n  ${({ theme, variant, disabled }) => css`\n    ${variant === 'primary' ? theme.typography.subhead1 : theme.typography.subhead2}\n    ${disabled &&\n    css`\n      opacity: 0.7;\n    `}\n  `};\n  cursor: ${({ $loading, $disabled }) => {\n    if ($disabled || $loading) {\n      return 'default';\n    } else {\n      return 'pointer';\n    }\n  }};\n  color: ${({ variant, $disabled, theme: { colors } }) => {\n    switch (variant) {\n      case 'primary':\n        if ($disabled) {\n          return colors.color2;\n        } else {\n          return colors.color1;\n        }\n      case 'secondary':\n        if ($disabled) {\n          return colors.color3;\n        } else {\n          return colors.color2;\n        }\n      default:\n        return colors.color2;\n    }\n  }};\n  background-color: ${({ variant, $disabled, theme: { colors } }) => {\n    switch (variant) {\n      case 'primary':\n        if ($disabled) {\n          return colors.color4;\n        } else {\n          return colors.color6;\n        }\n      case 'secondary':\n        return colors.color5;\n      default:\n        return colors.color4;\n    }\n  }};\n  &:hover {\n    ${({ variant, $disabled, $loading }) =>\n      variant === 'primary' &&\n      !$disabled &&\n      !$loading &&\n      css`\n        opacity: 0.7;\n      `};\n  }\n`;\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport avatarPic from '../../assets/img/GrtbVv47Y4c.jpeg';\nimport japanPic from '../../assets/img/japan.jpg';\nimport Button from '../../ui/Button';\n\nexport const Home = () => {\n  return (\n    <Root>\n      <View>\n        <Avatar src={avatarPic} />\n\n        <Text>Welcome my dear friend 🖤😼</Text>\n        <Link\n          variant=\"primary\"\n          label=\"Instagram\"\n          onClick={() => window.open('https://www.instagram.com/vlxdisluv', '_self')}\n        />\n        <Link\n          variant=\"primary\"\n          label=\"YouTube\"\n          onClick={() => window.open('https://youtube.com/channel/UC5GwZwBwbnazGNAjbOfoX5g', '_self')}\n        />\n\n        <Link\n          variant=\"primary\"\n          label=\"Music\"\n          onClick={() =>\n            window.open('https://songwhip.com/vlxdiluv/%E7%AB%8B%E3%81%A3%E3%81%A6%E6%AD%A9%E3%81%91%E3%82%88', '_self')\n          }\n        />\n      </View>\n    </Root>\n  );\n};\n\nconst Link = styled(Button)`\n  margin: 0 10px 10px 10px;\n  border-radius: 4px;\n`;\n\nconst Text = styled.div`\n  font-family: Roboto, sans-serif;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: ${({ theme: { colors } }) => colors.color6};\n  background-color: ${({ theme: { colors } }) => colors.color8};\n  padding: 10px 15px;\n  align-self: center;\n  border-radius: 4px;\n`;\n\nconst Root = styled.main`\n  max-width: 100%;\n  width: 100%;\n  height: 100vh;\n  margin-right: auto;\n  margin-left: auto;\n  background-image: url(${japanPic});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst View = styled.div`\n  max-width: 1024px;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-direction: column;\n\n  align-content: center;\n  justify-content: start;\n  align-items: stretch;\n  text-align: center;\n\n  padding-top: 20px;\n`;\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  background-color: ${({ theme: { colors } }) => colors.color0};\n  width: 200px;\n  height: 200px;\n  object-fit: cover;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  transition: 0.3s;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\n\nexport const Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport GlobalStyles from './GlobalStyles';\nimport Router from './Router';\nimport defaultTheme from './themes';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyles />\n      <Router />\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'poppins-font';\nimport 'normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}